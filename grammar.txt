// Grammar for the double u programming language

            program : expressionList
    
     expressionList : expression
                    | expression expressionList

         expression : expr SEMI
                    | loop
                    | if
                    | funcDef

               expr : primary
                    | primary operator expr

         optParamList : *empty*
                    | paramList

          paramList : expr
                    | expr COMMA paramList

            primary : literal
                    | OP expr CP
                    | lambda
                    | ID
                    | ID OP optParamList CP
                    | operator PRIMARY

           operator : MINUS
                    | PLUS
                    | NOT
                    | GT
                    | LT
                    | GTE
                    | LTE
                    | ISEQUAL
                    | AND
                    | OR
                    | EQUALS

            literal : INT
                    | STRING
 
            funcDef : FUNC ID OP optParamList CP block
  
             lambda : LAMBDA OP optParamList CP block

               loop : while
                    | for

              block : OB expresionList CB

              while : WHILE OP expr CP block

                for : FOR OP ID SEMI expr SEMI expr CP bock
        
                 if : IF OP expr CP block
            



func main (a, b, c) {
    while (a < c) {
        a = a + 1;
        }
    for (i, i <= c, i = i + 1) {
        print(b)
        }
    if (b == c) {
        print(b, c)
        }
    }
